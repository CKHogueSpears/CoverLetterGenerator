{
  "name": "AI Cover Letter Generator",
  "description": "Advanced AI-powered platform that helps job seekers create optimized, ATS-friendly cover letters through intelligent multi-agent workflows and secure authentication.",
  "language": "nodejs",
  "version": "20",
  "main": "server/index.ts",
  "entrypoint": "npm run dev",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@hookform/resolvers": "^3.3.4",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.9.4",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-aspect-ratio": "^1.0.3",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.0.3",
    "@radix-ui/react-context-menu": "^2.1.5",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-hover-card": "^1.0.7",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-menubar": "^1.0.4",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-toggle": "^1.0.3",
    "@radix-ui/react-toggle-group": "^1.0.4",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@replit/vite-plugin-cartographer": "^1.0.0",
    "@replit/vite-plugin-runtime-error-modal": "^1.0.0",
    "@tailwindcss/typography": "^0.5.13",
    "@tailwindcss/vite": "^4.0.0-alpha.20",
    "@tanstack/react-query": "^5.45.1",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "^4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/memoizee": "^0.4.11",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.14.8",
    "@types/passport": "^1.0.16",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/ws": "^8.5.10",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.19",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "connect-pg-simple": "^9.0.1",
    "date-fns": "^3.6.0",
    "docx": "^8.5.0",
    "docxtemplater": "^3.47.5",
    "drizzle-kit": "^0.22.8",
    "drizzle-orm": "^0.31.2",
    "drizzle-zod": "^0.5.1",
    "embla-carousel-react": "^8.1.5",
    "esbuild": "^0.21.5",
    "express": "^4.19.2",
    "express-session": "^1.18.0",
    "framer-motion": "^11.2.12",
    "input-otp": "^1.2.4",
    "lucide-react": "^0.395.0",
    "mammoth": "^1.7.2",
    "memoizee": "^0.4.15",
    "memorystore": "^1.6.7",
    "multer": "^1.4.5-lts.1",
    "next-themes": "^0.3.0",
    "openai": "^4.52.7",
    "openid-client": "^5.6.5",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-local": "^1.0.0",
    "pizzip": "^3.1.7",
    "postcss": "^8.4.38",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.52.0",
    "react-icons": "^5.2.1",
    "react-resizable-panels": "^2.0.19",
    "recharts": "^2.12.7",
    "tailwind-merge": "^2.3.0",
    "tailwindcss": "^3.4.4",
    "tailwindcss-animate": "^1.0.7",
    "tsx": "^4.15.7",
    "tw-animate-css": "^1.0.1",
    "typescript": "^5.5.2",
    "vaul": "^0.9.1",
    "vite": "^5.3.1",
    "wouter": "^3.2.1",
    "ws": "^8.17.1",
    "zod": "^3.23.8",
    "zod-validation-error": "^3.3.0"
  },
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "tsc && vite build",
    "start": "NODE_ENV=production tsx server/index.ts",
    "db:push": "drizzle-kit push"
  },
  "environment": {
    "required_secrets": [
      "DATABASE_URL",
      "GOOGLE_CLIENT_ID", 
      "GOOGLE_CLIENT_SECRET",
      "OPENAI_API_KEY",
      "ANTHROPIC_API_KEY",
      "SESSION_SECRET"
    ],
    "database": "postgresql-16"
  },
  "replit_config": {
    "modules": ["nodejs-20", "web", "postgresql-16"],
    "run": "npm run dev",
    "hidden": [".config", ".git", "generated-icon.png", "node_modules", "dist"],
    "nix": {
      "channel": "stable-24_05",
      "packages": ["zip"]
    },
    "deployment": {
      "deploymentTarget": "autoscale",
      "build": ["npm", "run", "build"],
      "run": ["npm", "run", "start"]
    },
    "ports": [
      {
        "localPort": 5000,
        "externalPort": 80
      }
    ],
    "workflows": [
      {
        "name": "Start application",
        "tasks": [
          {
            "task": "shell.exec",
            "args": "npm run dev",
            "waitForPort": 5000
          }
        ]
      }
    ]
  },
  "project_structure": {
    "client/": {
      "description": "Frontend React application with TypeScript",
      "key_files": [
        "src/App.tsx - Main application component with routing",
        "src/pages/ - Page components (home, login, not-found)",
        "src/components/ - Reusable UI components and forms",
        "src/lib/ - Utility functions and query client setup",
        "src/hooks/ - Custom React hooks for authentication and UI"
      ]
    },
    "server/": {
      "description": "Backend Express application with TypeScript",
      "key_files": [
        "index.ts - Main server entry point",
        "routes.ts - API route definitions",
        "storage.ts - Database operations and interface",
        "pipeline.ts - Cover letter generation pipeline",
        "multiAgentPipeline.ts - Multi-agent processing system",
        "anthropic.ts - Claude AI integration",
        "openai.ts - OpenAI integration",
        "googleAuth.ts - Authentication setup",
        "documentProcessor.ts - Document handling and DOCX generation",
        "cache.ts - Intelligent caching system"
      ]
    },
    "shared/": {
      "description": "Shared types and database schemas",
      "key_files": [
        "schema.ts - Drizzle ORM database schema definitions"
      ]
    },
    "configuration_files": [
      "package.json - Dependencies and scripts",
      "tsconfig.json - TypeScript configuration", 
      "vite.config.ts - Vite build configuration",
      "tailwind.config.ts - Tailwind CSS configuration",
      "drizzle.config.ts - Database configuration",
      "postcss.config.js - PostCSS configuration",
      "components.json - Shadcn/ui configuration"
    ]
  },
  "features": {
    "ai_powered_generation": {
      "description": "Multi-agent processing pipeline for document optimization",
      "components": [
        "ATS keyword extraction from job descriptions",
        "Requirements mapping to user accomplishments", 
        "Personalized content generation using OpenAI GPT-4",
        "Claude AI coherence refinement",
        "Quality scoring and validation",
        "Real-time progress tracking"
      ]
    },
    "authentication": {
      "description": "Secure user authentication and session management",
      "components": [
        "Google OAuth integration",
        "Passport.js authentication",
        "Express session management",
        "User-specific document storage"
      ]
    },
    "document_processing": {
      "description": "Advanced document handling capabilities",
      "components": [
        "Resume upload and analysis (DOCX, PDF)",
        "Job description parsing",
        "Cover letter template generation",
        "Professional DOCX export with formatting"
      ]
    },
    "caching_system": {
      "description": "Intelligent caching for performance optimization",
      "components": [
        "Style guide analysis caching",
        "Resume embeddings caching", 
        "Cover letter data caching",
        "API response caching with TTL"
      ]
    },
    "user_interface": {
      "description": "Modern, responsive React frontend",
      "components": [
        "Shadcn/ui component library",
        "Tailwind CSS styling",
        "Dark mode support",
        "Real-time progress indicators",
        "Form validation with react-hook-form",
        "TanStack Query for data fetching"
      ]
    }
  },
  "setup_instructions": {
    "1_clone_and_install": "Fork this Replit project or create new project with these files",
    "2_environment_setup": "Configure required environment variables in Replit Secrets",
    "3_database_setup": "Run 'npm run db:push' to initialize PostgreSQL schema",
    "4_api_keys": {
      "google_oauth": "Create Google Cloud project and OAuth credentials",
      "openai": "Get API key from OpenAI platform",
      "anthropic": "Get API key from Anthropic console",
      "session_secret": "Generate random string for session encryption"
    },
    "5_run_project": "Execute 'npm run dev' to start development server"
  },
  "api_endpoints": {
    "authentication": [
      "GET /auth/google - Initiate Google OAuth",
      "GET /auth/google/callback - OAuth callback",
      "POST /auth/logout - User logout"
    ],
    "documents": [
      "GET /api/documents - Get user documents",
      "POST /api/documents - Upload document", 
      "DELETE /api/documents/:id - Delete document"
    ],
    "job_descriptions": [
      "GET /api/job-descriptions - Get job descriptions",
      "POST /api/job-descriptions - Create job description",
      "PUT /api/job-descriptions/:id - Update job description"
    ],
    "cover_letters": [
      "GET /api/cover-letters - Get cover letters",
      "POST /api/cover-letters/generate - Generate new cover letter",
      "GET /api/cover-letters/:id/status - Get generation status",
      "GET /api/cover-letters/:id/download - Download as DOCX"
    ]
  },
  "technology_stack": {
    "backend": [
      "Node.js 20+ with TypeScript",
      "Express.js web framework",
      "PostgreSQL with Drizzle ORM",
      "Passport.js authentication",
      "OpenAI GPT-4 for content generation",
      "Anthropic Claude for coherence refinement"
    ],
    "frontend": [
      "React 18 with TypeScript", 
      "Vite build tooling",
      "Tailwind CSS styling",
      "Shadcn/ui component library",
      "TanStack Query for data fetching",
      "Wouter for client-side routing",
      "React Hook Form for form management"
    ],
    "deployment": [
      "Replit autoscale deployment",
      "GitHub Actions CI/CD",
      "Environment-based configuration",
      "Automatic dependency management"
    ]
  }
}